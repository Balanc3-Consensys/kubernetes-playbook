---
# tasks file for deployment

- name: set
  set_fact:
    deployments: "{{ services|selectattr('pod', 'defined')|selectattr('stateful', 'undefined')|list }}" 
  changed_when: False
  tags: [always]

- name: template
  template:
    src=templates/deployment.j2
    dest={{dest_path}}/{{item.name}}-deployment.json
  vars:
    service_name: "{{ item.name }}"
    pod: "{{ item.pod }}"
    canary: False
  with_items: "{{ deployments }}"
  when: item != None
  changed_when: False
  tags: [deployment, template]

- name: apply
  command: kubectl --server="{{kubernetes_master}}" apply -f {{dest_path}}/{{item.name}}-deployment.json
  with_items: "{{ deployments }}"
  when: item != None and not ansible_check_mode
  tags: [deployment]

- name: get
  command: kubectl --server="{{kubernetes_master}}" get deployments -l "canary!=true" -o json
  register: existing_deployments
  check_mode: no
  changed_when: False
  tags: [deployment, audit, delete]

- block:
  - name: audit
    debug: msg="deployment {{ item }} was not defined"
    with_items: "{{ undefined_deployments }}"
    when: item != None
    tags: [deployment, audit, delete]

  - name: delete
    command: kubectl --server="{{kubernetes_master}}" delete deployment "{{ item }}"
    with_items: "{{ undefined_deployments }}"
    when: item != None and not ansible_check_mode
    tags: [deployment, delete]
  vars:
    undefined_deployments: "{{ (existing_deployments.stdout|from_json)['items']|map(attribute='metadata.name')|difference(deployments|map(attribute='name'))|list }}"
